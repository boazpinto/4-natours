{"id":"../../node_modules/a_mock/partialMock/execute.js","dependencies":[{"name":"C:\\Users\\user\\OneDrive\\מסמכים\\back end applications\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1658228734017},{"name":"C:\\Users\\user\\OneDrive\\מסמכים\\back end applications\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\package.json","includedInParent":true,"mtime":1658228730267},{"name":"./negotiateDecrementExpectCount","loc":{"line":2,"column":45,"index":164},"parent":"C:\\Users\\user\\OneDrive\\מסמכים\\back end applications\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\execute.js","resolved":"C:\\Users\\user\\OneDrive\\מסמכים\\back end applications\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\negotiateDecrementExpectCount.js"}],"generated":{"js":"function execute(returnValue,fallback,hasCorrectArguments,mockContext,shouldDecrementExpectCount,whenCalledEmitter) {\t\n\tvar negotiateDecrementExpectCount = require('./negotiateDecrementExpectCount');\n\n\tvar index = 6;\n\tvar args = [];\n\twhile(index < arguments.length) {\n\t\targs.push(arguments[index]);\n\t\tindex++;\n\t}\n\tif (hasCorrectArguments.apply(null,args)) {\n\t\tnegotiateDecrementExpectCount(shouldDecrementExpectCount,mockContext);\n\t\twhenCalledEmitter.emit.apply(null,args);\n\t\treturn returnValue;\n\t}\n\t\t\n\treturn fallback.apply(null,args);\n}\n\nmodule.exports = execute;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/a_mock/partialMock/execute.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../../node_modules/a_mock/partialMock/execute.js":"function execute(returnValue,fallback,hasCorrectArguments,mockContext,shouldDecrementExpectCount,whenCalledEmitter) {\t\n\tvar negotiateDecrementExpectCount = require('./negotiateDecrementExpectCount');\n\n\tvar index = 6;\n\tvar args = [];\n\twhile(index < arguments.length) {\n\t\targs.push(arguments[index]);\n\t\tindex++;\n\t}\n\tif (hasCorrectArguments.apply(null,args)) {\n\t\tnegotiateDecrementExpectCount(shouldDecrementExpectCount,mockContext);\n\t\twhenCalledEmitter.emit.apply(null,args);\n\t\treturn returnValue;\n\t}\n\t\t\n\treturn fallback.apply(null,args);\n}\n\nmodule.exports = execute;"},"lineCount":19}},"error":null,"hash":"a4ab8470dee31a74a6f749ad675c314a","cacheData":{"env":{}}}